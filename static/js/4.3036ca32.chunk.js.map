{"version":3,"sources":["helper/KeyInfo.js","component/smallPiano/data.js","helper/useActiveNoteHandler.js","helper/useMouseClicker.js","assets/audio/1.g3.ogg","assets/audio/3.a3.ogg","assets/audio/6.c4.ogg","assets/audio/9.ds4.ogg","assets/audio/12.fs4.ogg","assets/audio/15.a4.ogg","assets/audio/18.c5.ogg","assets/audio/21.ds5.ogg","component/largePiano/data.js","component/piano/index.js","containers/PianoContainer.js"],"names":["KeyInfo","id","note","color","d","this","useActiveNoteHandler","sampler","translation","useState","setNotes","noteRef","React","useRef","touchRef","useEffect","handleKeyDown","key","repeat","current","includes","triggerAttack","handleKeyUp","filter","k","triggerRelease","window","addEventListener","removeEventListener","touchNoteInfo","identifier","handleTouchStart","e","preventDefault","target","dataset","touchInfo","changedTouches","handleTouchEnd","length","changedTouch","getDataset","undefined","x","clientX","y","clientY","getPointTouch","document","elementFromPoint","handleTouchMove","prevNote","find","el","removeScroll","piano","getElementsByClassName","passive","map","t","useMouseClicker","setClicked","setReleased","clickedRef","releasedRef","mousePressedRef","handleMouseUp","handleMouseMove","handleMouseDown","data","keyOrder","Piano","low","high","clicked","released","activeKeys","whiteKeyInfo","number","split","lowNote","lowNumber","highNote","highNumber","lowNoteValue","indexOf","highNoteValue","numberOfWhiteKeys","blackRightNeighbour","C","D","E","F","G","A","B","idx","i","hasNeighbour","push","createKeys","createKeyPath","data-note","className","onContextMenu","version","baseProfile","viewBox","xmlns","preserveAspectRatio","toLowerCase","substr","g3b","Buffer","g3","a3b","a3","c4b","c4","ds4b","ds4","fs4b","fs4","a4b","a4","c5b","c5","ds5b","ds5","Container","props","children","loaded","setLoaded","handle","useFullScreenHandle","Sampler","urls","baseUrl","release","onload","toDestination","onClick","enter"],"mappings":"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","file":"static/js/4.3036ca32.chunk.js","sourcesContent":["export default class KeyInfo {\r\n  constructor(id, note, color, d) {\r\n    this.id = id;\r\n    this.note = note;\r\n    this.color = color;\r\n    this.d = d;\r\n  }\r\n}","import KeyInfo from '../../helper/KeyInfo'\r\n\r\nexport const translation = {\r\n    'q': 'C2',\r\n    'w': 'D2',\r\n    'e': 'E2',\r\n    'r': 'F2',\r\n    't': 'G2',\r\n    'y': 'A2',\r\n    'u': 'B2',\r\n    'i': 'C3',\r\n    '2': 'C#2',\r\n    '3': 'D#2',\r\n    '5': 'F#2',\r\n    '6': 'G#2',\r\n    '7': 'A#2',\r\n}\r\n\r\nexport const smallKeys = [\r\n    new KeyInfo('c2-small', 'C2', 'white', \"M10.848.265v31.75H1.323a1.056 1.056 0 01-1.058-1.059V.265h10.583z\"),\r\n    new KeyInfo('d2-small', 'D2', 'white', \"M10.848.265h10.583v31.75H10.848z\"),\r\n    new KeyInfo('e2-small', 'E2', 'white', \"M21.431.265h10.583v31.75H21.431z\"),\r\n    new KeyInfo('f2-small', 'F2', 'white', \"M32.015.265h10.583v31.75H32.015z\"),\r\n    new KeyInfo('g2-small', 'G2', 'white', \"M42.598.265h10.583v31.75H42.598z\"),\r\n    new KeyInfo('a2-small', 'A2', 'white', \"M53.181.265h10.583v31.75H53.181z\"),\r\n    new KeyInfo('b2-small', 'B2', 'white', \"M63.765.265h10.583v31.75H63.765z\"),\r\n    new KeyInfo('c3-small', 'C3', 'white', \"M74.348.265v31.75h9.525c.586 0 1.058-.472 1.058-1.059V.265H74.348z\"),\r\n    new KeyInfo('cs2-small', 'C#2', 'black', \"M15.081.265v16.8c0 .547-.472.988-1.058.988h-6.35c-.586 0-1.058-.44-1.058-.988V.265z\"),\r\n    new KeyInfo('ds2-small', 'D#2', 'black', \"M25.665.265v16.8c0 .547-.472.988-1.059.988h-6.35c-.586 0-1.058-.44-1.058-.988V.265z\"),\r\n    new KeyInfo('fs2-small', 'F#2', 'black', \"M46.831.265v16.8c0 .547-.472.988-1.058.988h-6.35c-.586 0-1.058-.44-1.058-.988V.265z\"),\r\n    new KeyInfo('gs2-small', 'G#2', 'black', \"M57.415.265v16.8c0 .547-.472.988-1.059.988h-6.35c-.586 0-1.058-.44-1.058-.988V.265z\"),\r\n    new KeyInfo('as2-small', 'A#2', 'black', \"M67.998.265v16.8c0 .547-.472.988-1.058.988h-6.35c-.587 0-1.059-.44-1.059-.988V.265z\"),\r\n]","import React, { useEffect, useState } from 'react';\r\n\r\n// This returns the pressed notes so the class active can get added to pressed keys. It also plays the notes.\r\nconst useActiveNoteHandler = (sampler, translation) => {\r\n  const [, setNotes] = useState([])\r\n  const noteRef = React.useRef([])\r\n  const touchRef = React.useRef([])\r\n  useEffect(() => {\r\n    const handleKeyDown = ({ key, repeat }) => {\r\n      const note = translation[key]\r\n      if (!note || repeat || noteRef.current.includes(note)) return;\r\n      // I have to do it like this. If I use usestate here instead of ref it will remove and add the eventlisteners every time i click. This means if I release two keys at the same time the eventlistener for one of them might get removed by releasing the other key, and the website wont register the release of the key. I only use setNotes to trigger a rerender, it doesn't actually get used for anything else. \r\n      noteRef.current = [...noteRef.current, note]\r\n      setNotes(noteRef.current)\r\n      sampler.triggerAttack(note)\r\n    }\r\n    const handleKeyUp = ({ key }) => {\r\n      const note = translation[key]\r\n      noteRef.current = noteRef.current.filter(k => k !== note)\r\n      setNotes(noteRef.current)\r\n      sampler.triggerRelease(note)\r\n    }\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n    };\r\n  }, [sampler, translation])\r\n  useEffect(() => {\r\n    function touchNoteInfo({ identifier }, note) {\r\n      return { note, identifier }\r\n    }\r\n    function getPointTouch(changedTouch) {\r\n      const x = changedTouch.clientX\r\n      const y = changedTouch.clientY\r\n      return { x, y }\r\n    }\r\n    const handleTouchStart = (e) => {\r\n      e.preventDefault()\r\n      const { note } = e.target.dataset\r\n      const touchInfo = touchNoteInfo(e.changedTouches[0], note)\r\n      touchRef.current = [...touchRef.current, touchInfo]\r\n      setNotes(touchRef.current);\r\n      sampler.triggerAttack(note)\r\n    }\r\n\r\n    const handleTouchEnd = (e) => {\r\n      // Prevent default stops the clicking of buttons, like keybinding and enter fullscreen. If noteRef is larger than 0 I am currently clicking piano buttons, and then I want to stop default.\r\n      if (touchRef.current.length > 0) {\r\n        e.preventDefault()\r\n      }\r\n      for (const changedTouch of e.changedTouches) {\r\n        const dataset = getDataset(changedTouch)\r\n        if (dataset === undefined) return;\r\n        const note = touchNoteInfo(changedTouch, dataset.note)\r\n        touchRef.current = touchRef.current.filter(k => k.note !== note.note)\r\n        setNotes(...touchRef.current)\r\n        sampler.triggerRelease(note.note)\r\n\r\n      }\r\n    }\r\n    // Handlemove in a similar vein to this https://developer.mozilla.org/en-US/docs/Web/API/Touch_events under handleMove\r\n    const getDataset = (changedTouch) => {\r\n      const { x, y } = getPointTouch(changedTouch)\r\n      const dataset = document.elementFromPoint(x, y)?.dataset\r\n      return dataset\r\n    }\r\n    const handleTouchMove = (e) => {\r\n      for (const changedTouch of e.changedTouches) {\r\n\r\n        const dataset = getDataset(changedTouch)\r\n        if (dataset === undefined) return;\r\n        const note = touchNoteInfo(changedTouch, dataset.note)\r\n        const prevNote = touchRef.current.find(el => el.identifier === note.identifier) || { note: undefined, identifier: note.identifier };\r\n        if (note.note !== prevNote.note) {\r\n          touchRef.current = touchRef.current.filter(k => k.note !== prevNote.note)\r\n          touchRef.current = [...touchRef.current, note]\r\n          if (note.note != null) {\r\n            sampler.triggerAttack(note.note)\r\n          }\r\n          if (prevNote.note != null) {\r\n            sampler.triggerRelease(prevNote.note)\r\n          }\r\n          setNotes(touchRef.current)\r\n        }\r\n      }\r\n    }\r\n\r\n    const removeScroll = (e) => {\r\n      e.preventDefault();\r\n    }\r\n    const piano = document.getElementsByClassName('piano')[0]\r\n    // I need to add eventlistener here, instead of inline in element, because I need to set it to passive, so I can prevent default.\r\n    piano.addEventListener('touchstart', handleTouchStart, { passive: false });\r\n    document.addEventListener('touchend', handleTouchEnd);\r\n    document.addEventListener('touchmove', handleTouchMove, { passive: false });\r\n    piano.addEventListener('touchmove', removeScroll, { passive: false });\r\n    return () => {\r\n      piano.removeEventListener('touchstart', handleTouchStart, { passive: false });\r\n      document.removeEventListener('touchend', handleTouchEnd);\r\n      document.removeEventListener('touchmove', handleTouchMove, { passive: false });\r\n      piano.addEventListener('touchmove', removeScroll, { passive: false });\r\n    }\r\n  }, [sampler])\r\n  return [...touchRef.current.map(t => t.note), ...noteRef.current]\r\n}\r\nexport default useActiveNoteHandler;","import React, { useEffect, useState } from 'react';\r\nexport default function useMouseClicker(sampler) {\r\n    const [, setClicked] = useState(null)\r\n    const [, setReleased] = useState(null)\r\n    const clickedRef = React.useRef(null)\r\n    const releasedRef = React.useRef(null)\r\n    const mousePressedRef = React.useRef(false)\r\n    useEffect(() => {\r\n        const handleMouseUp = (e) => {\r\n            mousePressedRef.current = false;\r\n            if(e.target.dataset === undefined) return\r\n            const { note } = e.target.dataset\r\n            clickedRef.current = null;\r\n            releasedRef.current = note;\r\n            setReleased(note)\r\n            setClicked(null)\r\n        }\r\n\r\n        const handleMouseMove = (e) => {\r\n            if (mousePressedRef.current === true) {\r\n                if(e.target.dataset === undefined) return\r\n                const { note } = e.target.dataset\r\n                const prevNote = clickedRef.current;\r\n                if(note !== prevNote){\r\n                    clickedRef.current = note;\r\n                    releasedRef.current = prevNote;\r\n                    setClicked(note)\r\n                    setReleased(prevNote)\r\n                }\r\n            }\r\n        }\r\n        const handleMouseDown = (e) => {\r\n            mousePressedRef.current = true;\r\n            const { note } = e.target.dataset\r\n            if (!note) return\r\n            clickedRef.current = note;\r\n            releasedRef.current = null;\r\n            setClicked(note)\r\n            setReleased(null)\r\n        }\r\n\r\n        // Here instead of in path because I mouse sometimes get released not over the clicked note.\r\n        window.addEventListener('mousedown', handleMouseDown);\r\n        window.addEventListener('mousemove', handleMouseMove);\r\n        window.addEventListener('mouseup', handleMouseUp);\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleMouseDown);\r\n            window.removeEventListener('mousemove', handleMouseMove);\r\n            window.removeEventListener('mouseup', handleMouseUp);\r\n        }\r\n    }, [sampler])\r\n    return [clickedRef.current, releasedRef.current]\r\n}","export default __webpack_public_path__ + \"static/media/1.g3.8f81a3b9.ogg\";","export default __webpack_public_path__ + \"static/media/3.a3.9c12f360.ogg\";","export default __webpack_public_path__ + \"static/media/6.c4.2377fed6.ogg\";","export default __webpack_public_path__ + \"static/media/9.ds4.fc86c751.ogg\";","export default __webpack_public_path__ + \"static/media/12.fs4.d9071cbe.ogg\";","export default __webpack_public_path__ + \"static/media/15.a4.1f51ad50.ogg\";","export default __webpack_public_path__ + \"static/media/18.c5.350a2ba1.ogg\";","export default __webpack_public_path__ + \"static/media/21.ds5.929d4e7b.ogg\";","import KeyInfo from '../../helper/KeyInfo'\r\n\r\nexport const translation = {\r\n    'c': 'G1',\r\n    'v': 'A1',\r\n    'b': 'B1',\r\n    'q': 'C2',\r\n    'w': 'D2',\r\n    'e': 'E2',\r\n    'r': 'F2',\r\n    't': 'G2',\r\n    'y': 'A2',\r\n    'u': 'B2',\r\n    'i': 'C3',\r\n    'o': 'D3',\r\n    'f': 'G#1',\r\n    'g': 'A#1',\r\n    '2': 'C#2',\r\n    '3': 'D#2',\r\n    '5': 'F#2',\r\n    '6': 'G#2',\r\n    '7': 'A#2',\r\n}\r\nconst data = [\r\n    ['g1', 'G1', 'white', \"M10.848.265v31.75H1.323c-.794 0-1.058-.265-1.058-1.059V.265z\"],\r\n    ['a1', 'A1', 'white', \"M10.848.265h10.583v31.75H10.848z\"],\r\n    ['b1', 'B1', 'white', \"M21.431.265h10.583v31.75H21.431z\"],\r\n    ['c2', 'C2', 'white', \"M32.015.265h10.583v31.75H32.015z\"],\r\n    ['d2', 'D2', 'white', \"M42.598.265h10.583v31.75H42.598z\"],\r\n    ['e2', 'E2', 'white', \"M53.181.265h10.583v31.75H53.181z\"],\r\n    ['f2', 'F2', 'white', \"M63.765.265h10.583v31.75H63.765z\"],\r\n    ['g2', 'G2', 'white', \"M74.348.265h10.583v31.75H74.348z\"],\r\n    ['a2', 'A2', 'white', \"M84.931.265h10.583v31.75H84.931z\"],\r\n    ['b2', 'B2', 'white', \"M95.515.265h10.583v31.75H95.515z\"],\r\n    ['c3', 'C3', 'white', \"M106.098.265h10.583v31.75h-10.583z\"],\r\n    ['d3', 'D3', 'white', \"M116.681.265v31.75h9.525c.794 0 1.059-.265 1.059-1.059V.265z\"],\r\n    ['gs1', 'G#1', 'black', \"M15.081.265v16.8c0 .547-.472.988-1.058.988h-6.35c-.586 0-1.058-.44-1.058-.988V.265z\"],\r\n    ['as1', 'A#1', 'black', \"M25.665.265v16.8c0 .547-.472.988-1.059.988h-6.35c-.586 0-1.058-.44-1.058-.988V.265z\"],\r\n    ['cs2', 'C#2', 'black', \"M46.831.265v16.8c0 .547-.472.988-1.058.988h-6.35c-.586 0-1.058-.44-1.058-.988V.265z\"],\r\n    ['ds2', 'D#2', 'black', \"M57.415.265v16.8c0 .547-.472.988-1.059.988h-6.35c-.586 0-1.058-.44-1.058-.988V.265z\"],\r\n    ['fs2', 'F#2', 'black', \"M78.581.265v16.8c0 .547-.472.988-1.058.988h-6.35c-.586 0-1.058-.44-1.058-.988V.265z\"],\r\n    ['gs2', 'G#2', 'black', \"M89.165.265v16.8c0 .547-.472.988-1.059.988h-6.35c-.586 0-1.058-.44-1.058-.988V.265z\"],\r\n    ['as2', 'A#2', 'black', \"M99.748.265v16.8c0 .547-.472.988-1.058.988h-6.35c-.587 0-1.059-.44-1.059-.988V.265z\"],\r\n    ['cs3', 'C#3', 'black', \"M120.915.265v16.8c0 .547-.472.988-1.059.988h-6.35c-.586 0-1.058-.44-1.058-.988V.265z\"],\r\n]\r\nexport const largeKeys = data.map(el => new KeyInfo(el[0], el[1], el[2], el[3]))\r\nexport default data;","import React, { useEffect } from 'react'\r\nimport { translation } from '../largePiano/data'\r\nimport useActiveNoteHandler from '../../helper/useActiveNoteHandler';\r\nimport useMouseClicker from '../../helper/useMouseClicker';\r\n\r\nconst keyOrder = [\r\n  'C',\r\n  'D',\r\n  'E',\r\n  'F',\r\n  'G',\r\n  'A',\r\n  'B',\r\n]\r\n\r\nconst Piano = ({ sampler, low, high }) => {\r\n  const [clicked, released] = useMouseClicker();\r\n  const activeKeys = useActiveNoteHandler(sampler, translation)\r\n  const whiteKeyInfo = createKeys(low, high)\r\n  // The path is created here, if it is the first or last white key the left respectively the right corner should be rounded.\r\n\r\n\r\n  useEffect(() => {\r\n    if (clicked == null) return\r\n    sampler.triggerAttack(clicked)\r\n  }, [sampler, clicked])\r\n  useEffect(() => {\r\n    if (released == null) return\r\n    sampler.triggerRelease(released)\r\n  }, [sampler, released])\r\n\r\n\r\n  function createWhiteKeys() {\r\n    return whiteKeyInfo.map((key, i) => {\r\n      const id = key.note.toLowerCase()\r\n      if (i === 0) {\r\n        return createKeyPath(id, key.note, 'white', 'm 0 0 v 107 a 3 3 0 0 0 3 3 h 27 v -110 z')\r\n      } else if (i === whiteKeyInfo.length - 1) {\r\n        return createKeyPath(id, key.note, 'white', `m ${i * 30} 0 v 110 h 27 a 3 3 0 0 0 3 -3 v -107 z `)\r\n      } else {\r\n        return createKeyPath(id, key.note, 'white', `m ${i * 30} 0 v 110 h 30 v -110 z`)\r\n      }\r\n    })\r\n  }\r\n  function createKeyPath(id, note, color, d) {\r\n    return <path\r\n      key={id} id={id}\r\n      data-note={note}\r\n      className={`${color}-key piano-key ${activeKeys.includes(note) || clicked === note ? 'active' : ''}`}\r\n      d={d}\r\n      onContextMenu={(e) => e.preventDefault()}\r\n    />\r\n  }\r\n  // Maps through all the white keys. If the white key should have a neighbour it creates a black key, unless it is the last white key. If it shouldnt have a neighbour it returns null.\r\n  function createBlackKeys() {\r\n    return whiteKeyInfo.map((key, i) => {\r\n      const id = (key.note.substr(0, 1) + 's' + key.note.substr(1)).toLowerCase()\r\n      const note = key.note.substr(0, 1) + '#' + key.note.substr(1)\r\n      if (i === whiteKeyInfo.length - 1) {\r\n        return null;\r\n      }\r\n      else if (key.hasNeighbour) {\r\n        return createKeyPath(id, note, 'black', `m ${18 + 30 * i} 0 v 63 a 2 2 0 0 0 2 2 h 18 a 2 2 0 0 0 2 -2 v -63 z`)\r\n\r\n      }\r\n      else {\r\n        return null\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <svg version=\"1.1\" baseProfile=\"full\" className=\"piano\" viewBox={`-1 -1 ${whiteKeyInfo.length * 30 + 2} 112`} xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\r\n      {createWhiteKeys()}\r\n      {createBlackKeys()}\r\n    </svg>\r\n  )\r\n}\r\n\r\n// This creates an array with all white keys, also containing info if the key has a black key next to it.\r\nfunction createKeys(low, high) {\r\n  const number = numberOfWhiteKeys(low, high)\r\n  const blackRightNeighbour = {\r\n    C: true,\r\n    D: true,\r\n    E: false,\r\n    F: true,\r\n    G: true,\r\n    A: true,\r\n    B: false,\r\n  }\r\n\r\n  let [lowNote, lowNumber] = low.split(\"\")\r\n  let idx = keyOrder.indexOf(lowNote);\r\n  let whiteKeyInfo = []\r\n  for (let i = 0; i < number; i++) {\r\n    if (idx === 0 && i > 0) {\r\n      lowNumber++\r\n    }\r\n    const hasNeighbour = blackRightNeighbour[keyOrder[idx]]\r\n    whiteKeyInfo.push({ note: (keyOrder[idx] + lowNumber), hasNeighbour })\r\n    idx = idx > 5 ? 0 : idx + 1\r\n  }\r\n  return whiteKeyInfo;\r\n}\r\n\r\nfunction numberOfWhiteKeys(low, high) {\r\n  const [lowNote, lowNumber] = low.split(\"\")\r\n  const [highNote, highNumber] = high.split(\"\")\r\n  const lowNoteValue = keyOrder.indexOf(lowNote)\r\n  const highNoteValue = keyOrder.indexOf(highNote)\r\n  const noteValue = highNoteValue - lowNoteValue + 1\r\n  const octaveValue = highNumber - lowNumber;\r\n  return octaveValue * 7 + noteValue;\r\n}\r\nexport default Piano\r\n","import React, { useState } from 'react'\r\nimport { Sampler, Buffer } from 'tone'\r\nimport SmallPiano from \"../component/smallPiano/SmallPiano\";\r\nimport { g3, a3, c4, ds4, fs4, a4, c5, ds5 } from '../assets/audio'\r\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\r\nimport Piano from '../component/piano'\r\nconst g3b = new Buffer(g3)\r\nconst a3b = new Buffer(a3)\r\nconst c4b = new Buffer(c4)\r\nconst ds4b = new Buffer(ds4)\r\nconst fs4b = new Buffer(fs4)\r\nconst a4b = new Buffer(a4)\r\nconst c5b = new Buffer(c5)\r\nconst ds5b = new Buffer(ds5)\r\nconst Container = ({ high, low, children, ...props }) => {\r\n  const [loaded, setLoaded] = useState(false)\r\n  const handle = useFullScreenHandle();\r\n  const sampler = new Sampler({\r\n    urls: {\r\n      \"G1\": g3b,\r\n      \"A1\": a3b,\r\n      \"C2\": c4b,\r\n      \"D#2\": ds4b,\r\n      \"F#2\": fs4b,\r\n      \"A2\": a4b,\r\n      \"C3\": c5b,\r\n      \"D#3\": ds5b,\r\n    },\r\n    baseUrl: \"../../assets/audio\",\r\n    release: 1,\r\n    onload: () => {\r\n      setLoaded(true)\r\n    }\r\n  }).toDestination();\r\n\r\n  const handleClick = () => {\r\n    handle.enter()\r\n  }\r\n\r\n  return (\r\n    <div className=\"piano-container\" {...props}>\r\n      <FullScreen handle={handle}>\r\n        {loaded ?\r\n          <Piano sampler={sampler} low={low} high={high} />\r\n          : null}\r\n      </FullScreen>\r\n      <button id=\"fullscreen-btn\" onClick={handleClick}>\r\n        Enter fullscreen\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container\r\n"],"sourceRoot":""}