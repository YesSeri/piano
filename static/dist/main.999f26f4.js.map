{"version":3,"sources":["js/main.js"],"names":["c2","require","ds2","fs2","a2","c3","sampler","Tone","Sampler","urls","C2","A2","C3","release","baseUrl","toDestination","PianoKey","note","shortcut","polygon","pressed","console","log","classList","add","triggerAttack","remove","triggerRelease","pianoKeys","document","querySelector","addEventListener","evt","repeat","k","key","playNote","stopNote","lastClicked","pianoPolygons","getElementsByClassName","matchingKey","findMatchingKey","cancelable","preventDefault","stopPropagation","dataset","kbBtn","getElementById","kbDiv","toggle"],"mappings":"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","file":"main.999f26f4.js","sourceRoot":"..","sourcesContent":["\"use strict\";\r\n// The PianoKey class contains every relevant information and thing to create a piano key and play it.\r\n\r\nconst c2 = require('../assets/audio/C2.ogg');\r\nconst ds2 = require('../assets/audio/Ds2.ogg');\r\nconst fs2 = require('../assets/audio/Fs2.ogg');\r\nconst a2 = require('../assets/audio/A2.ogg');\r\nconst c3 = require('../assets/audio/C3.ogg');\r\nconst sampler = new Tone.Sampler({\r\n    urls: {\r\n        C2: c2,\r\n        \"D#2\": ds2,\r\n        \"F#2\": fs2,\r\n        A2: a2,\r\n        C3: c3,\r\n    },\r\n    release: 1,\r\n    baseUrl: \"\"\r\n}).toDestination();\r\nclass PianoKey {\r\n    constructor(note, shortcut, polygon) {\r\n        this.note = note\r\n        this.shortcut = shortcut\r\n        this.polygon = polygon\r\n        this.pressed = false\r\n    }\r\n    print() {\r\n        console.log({ 'note': this.note }, { 'shortcut': this.shortcut }, { 'polygon': this.polygon }, { 'pressed': this.pressed })\r\n    }\r\n    // Clears timeout to stop the fading out, and starts the sound from the beginning with max volume.\r\n    playNote() {\r\n        this.pressed = true;\r\n        this.polygon.classList.add('active')\r\n        sampler.triggerAttack(this.note)\r\n    }\r\n    stopNote() {\r\n        this.pressed = false;\r\n        this.polygon.classList.remove('active')\r\n        sampler.triggerRelease(this.note)\r\n    }\r\n}\r\n\r\n// Creates two arrays which will be used to create pianoKey objects that we will use in our piano. \r\n\r\nconst pianoKeys = [\r\n    new PianoKey('C2', \"a\", document.querySelector('.c2')),\r\n    new PianoKey('D2', \"s\", document.querySelector('.d2')),\r\n    new PianoKey('E2', \"d\", document.querySelector('.e2')),\r\n    new PianoKey('F2', \"f\", document.querySelector('.f2')),\r\n    new PianoKey('G2', \"g\", document.querySelector('.g2')),\r\n    new PianoKey('A2', \"h\", document.querySelector('.a2')),\r\n    new PianoKey('B2', \"j\", document.querySelector('.b2')),\r\n    new PianoKey('C3', \"k\", document.querySelector('.c3')),\r\n    new PianoKey(\"C#2\", \"w\", document.querySelector('.cs2')),\r\n    new PianoKey(\"D#2\", \"e\", document.querySelector('.ds2')),\r\n    new PianoKey(\"F#2\", \"t\", document.querySelector('.fs2')),\r\n    new PianoKey(\"G#2\", \"y\", document.querySelector('.gs2')),\r\n    new PianoKey(\"A#2\", \"u\", document.querySelector('.as2')),\r\n]\r\n\r\ndocument.addEventListener('keydown', (evt) => {\r\n    if (evt.repeat === true) return\r\n    for (const k of pianoKeys) {\r\n        if (evt.key === k.shortcut) {\r\n            if (k.pressed) return\r\n            k.playNote()\r\n            return\r\n        }\r\n    }\r\n})\r\ndocument.addEventListener('keyup', (evt) => {\r\n    for (const k of pianoKeys) {\r\n        if (evt.key === k.shortcut) {\r\n            k.stopNote()\r\n            return\r\n        }\r\n    }\r\n})\r\n\r\nlet lastClicked = null;\r\nconst pianoPolygons = document.getElementsByClassName('piano-key')\r\nfor (const polygon of pianoPolygons) {\r\n    const matchingKey = findMatchingKey(polygon)\r\n    polygon.addEventListener(\"touchstart\", (evt) => {\r\n        if (evt.cancelable) {\r\n            evt.preventDefault();\r\n        }\r\n        evt.stopPropagation();\r\n        matchingKey.playNote();\r\n    });\r\n    // This solution is not perfect. If I slide my finger outside the piano container the sound will stop but the \r\n    polygon.addEventListener(\"touchend\", (evt) => {\r\n        if (evt.cancelable) {\r\n            evt.preventDefault();\r\n        }\r\n        evt.stopPropagation();\r\n        matchingKey.stopNote();\r\n    });\r\n    // polygon.addEventListener('mousedown', (evt) => {\r\n    //     if (evt.cancelable) {\r\n    //         evt.preventDefault();\r\n    //     }\r\n    //     evt.stopPropagation();\r\n    //     matchingKey.playNote();\r\n    //     lastClicked = matchingKey\r\n    // })\r\n    // polygon.addEventListener('mouseup', (evt) => {\r\n    //     if (evt.cancelable) {\r\n    //         evt.preventDefault();\r\n    //     }\r\n    //     evt.stopPropagation();\r\n\r\n    //     if (lastClicked !== null) {\r\n    //         lastClicked.stopNote()\r\n    //     }\r\n    // })\r\n}\r\nfunction findMatchingKey(polygon) {\r\n    for (const key of pianoKeys) {\r\n        if (polygon.dataset.note === key.note) {\r\n            return key\r\n        }\r\n    }\r\n}\r\n// function startup() {\r\n//     const piano = document.getElementById(\"canvas\");\r\n//     el.addEventListener(\"touchend\", handleEnd, false);\r\n//     el.addEventListener(\"touchcancel\", handleCancel, false);\r\n//     el.addEventListener(\"touchmove\", handleMove, false);\r\n// }\r\n\r\n// document.addEventListener(\"DOMContentLoaded\", startup);\r\n\r\nconst kbBtn = document.getElementById('keybindings-btn')\r\nconst kbDiv = document.getElementById('keybindings-div')\r\n\r\nkbBtn.addEventListener('click', () => {\r\n    kbBtn.classList.toggle('clicked')\r\n    kbDiv.classList.toggle('hidden')\r\n})"]}